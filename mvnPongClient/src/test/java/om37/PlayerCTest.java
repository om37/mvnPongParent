package om37;

//import junit.framework.Test;//Commented because of conflicting imports. I believe this could be for junit version 3. Was generated by maven
import java.io.IOException;
import java.net.Socket;
import java.net.UnknownHostException;

import junit.framework.TestCase;
import junit.framework.TestSuite;


//Added by me
import org.junit.*;

import common.Global;

import junit.*;

/**
 * Unit test for simple App.
 */
public class PlayerCTest 
{
	PlayerC playerUnderTest;
    public PlayerCTest()
    {
    	
    }

    @Before
    public void setup() throws Exception
    {
    	playerUnderTest = new PlayerC(new C_PongModel(), new Socket());
    }    
    
    @Test
    public void testParseDataFromServer()
    {
    	C_PongModel playersModel = playerUnderTest.getModel();
    	    	
    	String newValues = "5,5,5,5,5,5";
    	playerUnderTest.parseDataFromServer(newValues.split(","));
    	
    	double testValue = (double)Double.parseDouble("5");
    	 	
    	Assert.assertEquals(testValue , playersModel.getBall().getX(), 0.0);
    	Assert.assertEquals(testValue , playersModel.getBall().getY(), 0.0);
    	Assert.assertEquals(testValue , playersModel.getBats()[0].getX(), 0.0);
    	Assert.assertEquals(testValue , playersModel.getBats()[0].getY(), 0.0);
    	Assert.assertEquals(testValue , playersModel.getBats()[1].getX(), 0.0);
    	Assert.assertEquals(testValue , playersModel.getBats()[1].getY(), 0.0);
    	
    }
    
    @Test(expected = NumberFormatException.class)
    public void numberFormatExceptionTest()
    {
    	playerUnderTest.parseDataFromServer("This is not a double".split(" "));
    }
    
    @Test(expected= NullPointerException.class)
    public void nullStringTest()
    {
    	playerUnderTest.parseDataFromServer(null);
    }  
    
    @Test(expected = ArrayIndexOutOfBoundsException.class)
    public void notEnoughIndexes()
    {
    	playerUnderTest.parseDataFromServer(new String[]{"0","1","2","3","4"});
    }
    
    /*
     * Currently doesn't really work
     * Can't find a way to initialise socket as can't create a connection in testing
     * Leading to writer being null
     */
    @Test(expected=NullPointerException.class)
    public void moveTest()
    {
    	playerUnderTest.moveBat("newDetails");
    	String data = (String)playerUnderTest.getReader().get();
    	System.out.println( data );
    	Assert.assertTrue(true);
    }
}
;